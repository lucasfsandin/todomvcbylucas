{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/lucas/developments/reactjs/todomvccopy/components/form/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Todo from \"../todo\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"todos\", [{\n      id: 1,\n      value: \"task 1\",\n      complete: false\n    }, {\n      id: 2,\n      value: \"task 2\",\n      complete: false\n    }, {\n      id: 3,\n      value: \"task 3\",\n      complete: false\n    }, {\n      id: 4,\n      value: \"task 4\",\n      complete: false\n    }]);\n\n    _defineProperty(this, \"style\", {\n      color: \"#0202028a\",\n      textDecoration: \"line-through\"\n    });\n\n    _defineProperty(this, \"onChange\", event => {\n      this.setState({\n        data: _objectSpread(_objectSpread({}, this.state.data), {}, {\n          [event.target.name]: event.target.value\n        })\n      });\n    });\n\n    _defineProperty(this, \"onSubmit\", event => {\n      event.preventDefault();\n      const selecteds = [...this.state.selecteds, {\n        id: Math.floor(Math.random() * 1000 + 1),\n        value: this.state.data.todo,\n        complete: false\n      }];\n      this.setState({\n        selecteds,\n        all: selecteds,\n        active: selecteds.filter(f => !f.complete),\n        complete: selecteds.filter(f => f.complete)\n      });\n    });\n\n    _defineProperty(this, \"onSelect\", event => {\n      let selecteds = this.state.all.map(k => {\n        let aux = k;\n\n        if (parseInt(event.target.id) === k.id) {\n          if (event.target.checked) {\n            aux = _objectSpread(_objectSpread({}, k), {}, {\n              styled: this.style,\n              complete: true\n            });\n          }\n\n          if (!event.target.checked) aux = _objectSpread(_objectSpread({}, k), {}, {\n            styled: {},\n            complete: false\n          });\n        }\n\n        return aux;\n      });\n      let active = selecteds.filter(f => !f.complete);\n      let complete = selecteds.filter(f => f.complete);\n      let all = selecteds;\n      this.setState({\n        active,\n        complete,\n        all\n      }, () => this.onController(this.state.control));\n    });\n\n    _defineProperty(this, \"onController\", control => {\n      switch (control) {\n        case \"active\":\n          this.setState({\n            control: \"active\",\n            selecteds: this.state.active\n          });\n          break;\n\n        case \"complete\":\n          this.setState({\n            control: \"complete\",\n            selecteds: this.state.complete\n          });\n          break;\n\n        default:\n          this.setState({\n            control: \"all\",\n            selecteds: this.state.all\n          });\n      }\n    });\n\n    this.state = {\n      data: {\n        todo: \"\"\n      },\n      selecteds: this.todos,\n      active: this.todos,\n      all: this.todos,\n      complete: [],\n      control: \"all\"\n    };\n  }\n\n  componentDidMount() {\n    document.querySelector(\"#todo\").focus();\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, __jsx(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(\"input\", {\n      type: \"text\",\n      id: \"todo\",\n      name: \"todo\",\n      placeholder: \"Task here\",\n      onChange: this.onChange,\n      value: this.state.data.todo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    })), __jsx(Todo, {\n      todos: this.state.selecteds,\n      change: event => this.onSelect(event),\n      controller: control => this.onController(control),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Form;","map":{"version":3,"sources":["/Users/lucas/developments/reactjs/todomvccopy/components/form/index.js"],"names":["React","Component","Todo","Form","constructor","props","id","value","complete","color","textDecoration","event","setState","data","state","target","name","preventDefault","selecteds","Math","floor","random","todo","all","active","filter","f","map","k","aux","parseInt","checked","styled","style","onController","control","todos","componentDidMount","document","querySelector","focus","render","onSubmit","onChange","onSelect"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Todo from \"../todo\";\n\nclass Form extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: { todo: \"\" },\n      selecteds: this.todos,\n      active: this.todos,\n      all: this.todos,\n      complete: [],\n      control: \"all\",\n    };\n  }\n\n  todos = [\n    { id: 1, value: \"task 1\", complete: false },\n    { id: 2, value: \"task 2\", complete: false },\n    { id: 3, value: \"task 3\", complete: false },\n    { id: 4, value: \"task 4\", complete: false },\n  ];\n\n  style = {\n    color: \"#0202028a\",\n    textDecoration: \"line-through\",\n  };\n\n  componentDidMount() {\n    document.querySelector(\"#todo\").focus();\n  }\n\n  onChange = (event) => {\n    this.setState({\n      data: { ...this.state.data, [event.target.name]: event.target.value },\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const selecteds = [\n      ...this.state.selecteds,\n      {\n        id: Math.floor(Math.random() * 1000 + 1),\n        value: this.state.data.todo,\n        complete: false,\n      },\n    ];\n\n    this.setState({\n      selecteds,\n      all: selecteds,\n      active: selecteds.filter((f) => !f.complete),\n      complete: selecteds.filter((f) => f.complete),\n    });\n  };\n\n  onSelect = (event) => {\n    let selecteds = this.state.all.map((k) => {\n      let aux = k;\n      if (parseInt(event.target.id) === k.id) {\n        if (event.target.checked) {\n          aux = { ...k, styled: this.style, complete: true };\n        }\n\n        if (!event.target.checked) aux = { ...k, styled: {}, complete: false };\n      }\n      return aux;\n    });\n\n    let active = selecteds.filter((f) => !f.complete);\n    let complete = selecteds.filter((f) => f.complete);\n    let all = selecteds;\n    this.setState({ active, complete, all }, () =>\n      this.onController(this.state.control)\n    );\n  };\n\n  onController = (control) => {\n    switch (control) {\n      case \"active\":\n        this.setState({\n          control: \"active\",\n          selecteds: this.state.active,\n        });\n        break;\n      case \"complete\":\n        this.setState({\n          control: \"complete\",\n          selecteds: this.state.complete,\n        });\n        break;\n      default:\n        this.setState({\n          control: \"all\",\n          selecteds: this.state.all,\n        });\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.onSubmit}>\n          <input\n            type=\"text\"\n            id=\"todo\"\n            name=\"todo\"\n            placeholder=\"Task here\"\n            onChange={this.onChange}\n            value={this.state.data.todo}\n          ></input>\n        </form>\n        <Todo\n          todos={this.state.selecteds}\n          change={(event) => this.onSelect(event)}\n          controller={(control) => this.onController(control)}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}
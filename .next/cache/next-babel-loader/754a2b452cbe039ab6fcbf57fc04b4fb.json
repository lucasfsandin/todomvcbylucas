{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$(),\n    _jsxFileName = \"/Users/lucas/developments/reactjs/todomvccopy/pages/index.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n// import React, { Component } from \"react\";\n// import Form from \"../components/form\";\n// import Footer from \"../components/footer\";\n// class Home extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Form />\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }\n// export default Home;\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { Machine, interpret } from \"xstate\";\n\nfunction useMachine(machine) {\n  _s();\n\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(machine.initialState);\n  const service = useMemo(() => interpret(machine).onTransition(state => {\n    if (state.changed) {\n      setCurrent(state);\n    }\n  }).start(), []);\n  useEffect(() => {\n    return () => service.stop();\n  }, []);\n  return [current, service.send];\n}\n\n_s(useMachine, \"N8luULfBWGYCeClt5AuKgM0ZvFA=\");\n\nfunction fakePayment() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => reject(), 2500);\n  });\n}\n\nconst stateMachine = Machine({\n  initial: \"idle\",\n  states: {\n    idle: {\n      on: {\n        SUBMIT: [{\n          target: \"loading\",\n          cond: (context, event) => {\n            return event.data.name !== \"\" && event.data.card !== \"\";\n          }\n        }, {\n          target: \"error\"\n        }]\n      }\n    },\n    loading: {\n      invoke: {\n        id: \"doPayment\",\n        src: () => fakePayment(),\n        onDone: {\n          target: \"success\"\n        },\n        onError: {\n          target: \"error\"\n        }\n      }\n    },\n    error: {\n      on: {\n        SUBMIT: [{\n          target: \"loading\",\n          cond: (context, event) => {\n            return event.data.name !== \"\" && event.data.card !== \"\";\n          }\n        }]\n      }\n    },\n    success: {\n      type: \"final\"\n    }\n  }\n});\n\nconst App = () => {\n  _s2();\n\n  const [machine, send] = useMachine(stateMachine);\n  const {\n    0: form,\n    1: updateForm\n  } = useState({\n    name: \"\",\n    card: \"\"\n  });\n  console.log(machine.value);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, \"State Machine Payment\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      send({\n        type: \"SUBMIT\",\n        data: _objectSpread({}, form)\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"name on card\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"nameOnCard\",\n    maxLength: \"255\",\n    value: form.name,\n    onChange: e => updateForm(_objectSpread(_objectSpread({}, form), {}, {\n      name: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, \"card number\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"creditCardNumber\",\n    value: form.card,\n    onChange: e => updateForm(_objectSpread(_objectSpread({}, form), {}, {\n      card: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    id: \"payButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"pay now\")))));\n};\n\n_s2(App, \"iogDaXWqQ1sp5IFhTC/2KVjMWCs=\", false, function () {\n  return [useMachine];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lucas/developments/reactjs/todomvccopy/pages/index.js"],"names":["React","useState","useMemo","useEffect","Machine","interpret","useMachine","machine","current","setCurrent","initialState","service","onTransition","state","changed","start","stop","send","fakePayment","Promise","resolve","reject","setTimeout","stateMachine","initial","states","idle","on","SUBMIT","target","cond","context","event","data","name","card","loading","invoke","id","src","onDone","onError","error","success","type","App","form","updateForm","console","log","value","e","preventDefault"],"mappings":"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","sourcesContent":["// import React, { Component } from \"react\";\n// import Form from \"../components/form\";\n// import Footer from \"../components/footer\";\n\n// class Home extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <Form />\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }\n\n// export default Home;\n\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { Machine, interpret } from \"xstate\";\n\nfunction useMachine(machine) {\n  const [current, setCurrent] = useState(machine.initialState);\n\n  const service = useMemo(\n    () =>\n      interpret(machine)\n        .onTransition((state) => {\n          if (state.changed) {\n            setCurrent(state);\n          }\n        })\n        .start(),\n    []\n  );\n\n  useEffect(() => {\n    return () => service.stop();\n  }, []);\n\n  return [current, service.send];\n}\n\nfunction fakePayment() {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => reject(), 2500);\n  });\n}\n\nconst stateMachine = Machine({\n  initial: \"idle\",\n  states: {\n    idle: {\n      on: {\n        SUBMIT: [\n          {\n            target: \"loading\",\n            cond: (context, event) => {\n              return event.data.name !== \"\" && event.data.card !== \"\";\n            },\n          },\n          {\n            target: \"error\",\n          },\n        ],\n      },\n    },\n    loading: {\n      invoke: {\n        id: \"doPayment\",\n        src: () => fakePayment(),\n        onDone: {\n          target: \"success\",\n        },\n        onError: {\n          target: \"error\",\n        },\n      },\n    },\n    error: {\n      on: {\n        SUBMIT: [\n          {\n            target: \"loading\",\n            cond: (context, event) => {\n              return event.data.name !== \"\" && event.data.card !== \"\";\n            },\n          },\n        ],\n      },\n    },\n    success: {\n      type: \"final\",\n    },\n  },\n});\n\nconst App = () => {\n  const [machine, send] = useMachine(stateMachine);\n  const [form, updateForm] = useState({\n    name: \"\",\n    card: \"\",\n  });\n\n  console.log(machine.value);\n\n  return (\n    <div>\n      <div>\n        <h2>State Machine Payment</h2>\n      </div>\n\n      <div>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault();\n            send({ type: \"SUBMIT\", data: { ...form } });\n          }}\n        >\n          <div>\n            <label>name on card</label>\n            <input\n              type=\"text\"\n              id=\"nameOnCard\"\n              maxLength=\"255\"\n              value={form.name}\n              onChange={(e) => updateForm({ ...form, name: e.target.value })}\n            />\n          </div>\n          <div>\n            <label>card number</label>\n            <input\n              type=\"text\"\n              id=\"creditCardNumber\"\n              value={form.card}\n              onChange={(e) => updateForm({ ...form, card: e.target.value })}\n            />\n          </div>\n          <button type=\"submit\" id=\"payButton\">\n            <span>pay now</span>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _s = $RefreshSig$(),\n    _jsxFileName = \"/Users/lucas/developments/reactjs/todomvccopy/components/todos/index.js\",\n    _s2 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { Machine, interpret } from \"xstate\";\n\nconst useMachine = machine => {\n  _s();\n\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(machine.initialState);\n  const service = useMemo(() => interpret(machine).onTransition(state => {\n    if (state.changed) {\n      setCurrent(state);\n    }\n  }).start(), []);\n  useEffect(() => {\n    return () => service.stop();\n  }, []);\n  return [current, service.send];\n};\n\n_s(useMachine, \"N8luULfBWGYCeClt5AuKgM0ZvFA=\");\n\nconst todoMachine = Machine({\n  initial: \"all\",\n  states: {\n    all: {// all\n    },\n    active: {// actives\n    },\n    complete: {// completes\n    }\n  }\n});\n\nconst Todos = () => {\n  _s2();\n\n  const [machine, send] = useMachine(todoMachine);\n  const [todos, getTodos] = [];\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"todo\",\n    name: \"todo\",\n    placeholder: \"Task here\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  })), todos && todos.map(t => __jsx(\"li\", {\n    key: t.id,\n    style: t.styled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: t.id,\n    name: \"register\",\n    value: t.value,\n    onChange: e => this.props.change(e),\n    checked: t.complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }), t.value)), __jsx(\"button\", {\n    type: \"button\",\n    onClick: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, \"All\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, \"Active\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, \"Complete\"));\n};\n\n_s2(Todos, \"QYszsoYHlEbJxG+N8CcWAfNzNwk=\", false, function () {\n  return [useMachine];\n});\n\n_c = Todos;\nexport default Todos;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todos\");","map":{"version":3,"sources":["/Users/lucas/developments/reactjs/todomvccopy/components/todos/index.js"],"names":["React","useState","useMemo","useEffect","Machine","interpret","useMachine","machine","current","setCurrent","initialState","service","onTransition","state","changed","start","stop","send","todoMachine","initial","states","all","active","complete","Todos","todos","getTodos","map","t","id","styled","value","e","props","change"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\nimport { Machine, interpret } from \"xstate\";\n\nconst useMachine = (machine) => {\n  const [current, setCurrent] = useState(machine.initialState);\n\n  const service = useMemo(\n    () =>\n      interpret(machine)\n        .onTransition((state) => {\n          if (state.changed) {\n            setCurrent(state);\n          }\n        })\n        .start(),\n    []\n  );\n\n  useEffect(() => {\n    return () => service.stop();\n  }, []);\n\n  return [current, service.send];\n};\n\nconst todoMachine = Machine({\n  initial: \"all\",\n  states: {\n    all: {\n      // all\n    },\n    active: {\n      // actives\n    },\n    complete: {\n      // completes\n    },\n  },\n});\n\nconst Todos = () => {\n  const [machine, send] = useMachine(todoMachine);\n  const [todos, getTodos] = [];\n\n  return (\n    <div>\n      <form>\n        <input\n          type=\"text\"\n          id=\"todo\"\n          name=\"todo\"\n          placeholder=\"Task here\"\n        ></input>\n      </form>\n\n      {todos &&\n        todos.map((t) => (\n          <li key={t.id} style={t.styled}>\n            <input\n              type=\"checkbox\"\n              id={t.id}\n              name=\"register\"\n              value={t.value}\n              onChange={(e) => this.props.change(e)}\n              checked={t.complete}\n            />\n            {t.value}\n          </li>\n        ))}\n\n      <button type=\"button\" onClick={{}}>\n        All\n      </button>\n      <button type=\"button\" onClick={{}}>\n        Active\n      </button>\n      <button type=\"button\" onClick={{}}>\n        Complete\n      </button>\n    </div>\n  );\n};\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/developments/reactjs/todomvccopy/pages/index.js\";\nvar __jsx = React.createElement;\n// import React, { Component } from \"react\";\n// import Form from \"../components/form\";\n// import Footer from \"../components/footer\";\n// class Home extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n//   render() {\n//     return (\n//       <div>\n//         <Form />\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }\n// export default Home;\nimport React from \"react\";\nimport { Machine } from \"xstate\";\nconst stateMachine = Machine({\n  initial: \"idle\",\n  states: {\n    idle: {\n      on: {\n        SUBMIT: [{\n          target: \"loading\",\n          cond: (context, event) => event.data.name !== \"\" && event.data.card !== \"\"\n        }, {\n          target: \"error\"\n        }]\n      }\n    },\n    loading: {\n      on: {\n        PAYMENT_RECEIVED: \"success\",\n        PAYMENT_FAILED: \"error\"\n      }\n    },\n    error: {\n      on: {\n        SUBMIT: \"loading\"\n      }\n    },\n    success: {\n      type: \"final\"\n    }\n  }\n});\n\nconst App = () => {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, \"State Machine Payment\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, __jsx(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, \"name on card\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"nameOnCard\",\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  })), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }, \"card number\"), __jsx(\"input\", {\n    type: \"text\",\n    id: \"creditCardNumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  })), __jsx(\"button\", {\n    type: \"submit\",\n    id: \"payButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"pay now\")))));\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/lucas/developments/reactjs/todomvccopy/pages/index.js"],"names":["React","Machine","stateMachine","initial","states","idle","on","SUBMIT","target","cond","context","event","data","name","card","loading","PAYMENT_RECEIVED","PAYMENT_FAILED","error","success","type","App"],"mappings":";;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,QAAxB;AAEA,MAAMC,YAAY,GAAGD,OAAO,CAAC;AAC3BE,EAAAA,OAAO,EAAE,MADkB;AAE3BC,EAAAA,MAAM,EAAE;AACNC,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE;AACFC,QAAAA,MAAM,EAAE,CACN;AACEC,UAAAA,MAAM,EAAE,SADV;AAEEC,UAAAA,IAAI,EAAE,CAACC,OAAD,EAAUC,KAAV,KACJA,KAAK,CAACC,IAAN,CAAWC,IAAX,KAAoB,EAApB,IAA0BF,KAAK,CAACC,IAAN,CAAWE,IAAX,KAAoB;AAHlD,SADM,EAMN;AACEN,UAAAA,MAAM,EAAE;AADV,SANM;AADN;AADA,KADA;AAeNO,IAAAA,OAAO,EAAE;AACPT,MAAAA,EAAE,EAAE;AACFU,QAAAA,gBAAgB,EAAE,SADhB;AAEFC,QAAAA,cAAc,EAAE;AAFd;AADG,KAfH;AAqBNC,IAAAA,KAAK,EAAE;AACLZ,MAAAA,EAAE,EAAE;AACFC,QAAAA,MAAM,EAAE;AADN;AADC,KArBD;AA0BNY,IAAAA,OAAO,EAAE;AACPC,MAAAA,IAAI,EAAE;AADC;AA1BH;AAFmB,CAAD,CAA5B;;AAkCA,MAAMC,GAAG,GAAG,MAAM;AAChB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,YAAtB;AAAmC,IAAA,SAAS,EAAC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CADF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,EAAE,EAAC,kBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALF,EASE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,EAAE,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CATF,CADF,CALF,CADF;AAuBD,CAxBD;;KAAMA,G;AA0BN,eAAeA,GAAf","sourcesContent":["// import React, { Component } from \"react\";\n// import Form from \"../components/form\";\n// import Footer from \"../components/footer\";\n\n// class Home extends Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {};\n//   }\n\n//   render() {\n//     return (\n//       <div>\n//         <Form />\n//         <Footer />\n//       </div>\n//     );\n//   }\n// }\n\n// export default Home;\n\nimport React from \"react\";\nimport { Machine } from \"xstate\";\n\nconst stateMachine = Machine({\n  initial: \"idle\",\n  states: {\n    idle: {\n      on: {\n        SUBMIT: [\n          {\n            target: \"loading\",\n            cond: (context, event) =>\n              event.data.name !== \"\" && event.data.card !== \"\",\n          },\n          {\n            target: \"error\",\n          },\n        ],\n      },\n    },\n    loading: {\n      on: {\n        PAYMENT_RECEIVED: \"success\",\n        PAYMENT_FAILED: \"error\",\n      },\n    },\n    error: {\n      on: {\n        SUBMIT: \"loading\",\n      },\n    },\n    success: {\n      type: \"final\",\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <div>\n      <div>\n        <h2>State Machine Payment</h2>\n      </div>\n\n      <div>\n        <form>\n          <div>\n            <label>name on card</label>\n            <input type=\"text\" id=\"nameOnCard\" maxLength=\"255\" />\n          </div>\n          <div>\n            <label>card number</label>\n            <input type=\"text\" id=\"creditCardNumber\" />\n          </div>\n          <button type=\"submit\" id=\"payButton\">\n            <span>pay now</span>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
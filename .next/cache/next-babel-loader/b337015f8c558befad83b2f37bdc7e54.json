{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/developments/reactjs/todomvccopy/components/todos/index.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState, useMemo, useEffect } from \"react\";\nimport { Machine, interpret } from \"xstate\";\n\nconst useMachine = machine => {\n  const {\n    0: current,\n    1: setCurrent\n  } = useState(machine.initialState);\n  const service = useMemo(() => interpret(machine).onTransition(state => {\n    if (state.changed) {\n      setCurrent(state);\n    }\n  }).start(), []);\n  useEffect(() => {\n    return () => service.stop();\n  }, []);\n  return [current, service.send];\n};\n\nconst todoMachine = Machine({\n  initial: \"all\",\n  states: {\n    all: {// all\n    },\n    active: {// actives\n    },\n    complete: {// completes\n    }\n  }\n});\n\nconst Todos = () => {\n  const [machine, send] = useMachine(todoMachine);\n  const {\n    0: todos,\n    1: setTodos\n  } = useState({\n    formulary: {\n      task: \"\"\n    },\n    list: [{\n      id: 1,\n      value: \"task 1\",\n      complete: false\n    }, {\n      id: 2,\n      value: \"task 2\",\n      complete: false\n    }, {\n      id: 3,\n      value: \"task 3\",\n      complete: false\n    }, {\n      id: 4,\n      value: \"task 4\",\n      complete: false\n    }]\n  });\n  console.log(todos);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: e => {\n      e.preventDefault();\n      const formlary = [...todos.list, {\n        id: Math.floor(Math.random() * 1000 + 1),\n        value: e.target.value,\n        complete: false\n      }];\n      console.log(formlary);\n      setTodos(formlary);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    type: \"text\",\n    id: \"todo\",\n    name: \"todo\",\n    placeholder: \"Task here\",\n    value: todos.formulary.task,\n    onChange: e => setTodos(_objectSpread(_objectSpread({}, todos.formulary.task), {}, {\n      task: e.target.value\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"save\")), todos.list && todos.list.map(t => __jsx(\"li\", {\n    key: t.id,\n    style: t.styled,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, __jsx(\"input\", {\n    type: \"checkbox\",\n    id: t.id,\n    name: \"register\",\n    value: t.value,\n    onChange: e => this.props.change(e),\n    checked: t.complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }), t.value)), __jsx(\"button\", {\n    type: \"button\",\n    onClick: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, \"All\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, \"Active\"), __jsx(\"button\", {\n    type: \"button\",\n    onClick: {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, \"Complete\"));\n};\n\nexport default Todos;","map":{"version":3,"sources":["/Users/lucas/developments/reactjs/todomvccopy/components/todos/index.js"],"names":["React","useState","useMemo","useEffect","Machine","interpret","useMachine","machine","current","setCurrent","initialState","service","onTransition","state","changed","start","stop","send","todoMachine","initial","states","all","active","complete","Todos","todos","setTodos","formulary","task","list","id","value","console","log","e","preventDefault","formlary","Math","floor","random","target","map","t","styled","props","change"],"mappings":"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","sourcesContent":["import React, { useState, useMemo, useEffect } from \"react\";\nimport { Machine, interpret } from \"xstate\";\n\nconst useMachine = (machine) => {\n  const [current, setCurrent] = useState(machine.initialState);\n\n  const service = useMemo(\n    () =>\n      interpret(machine)\n        .onTransition((state) => {\n          if (state.changed) {\n            setCurrent(state);\n          }\n        })\n        .start(),\n    []\n  );\n\n  useEffect(() => {\n    return () => service.stop();\n  }, []);\n\n  return [current, service.send];\n};\n\nconst todoMachine = Machine({\n  initial: \"all\",\n  states: {\n    all: {\n      // all\n    },\n    active: {\n      // actives\n    },\n    complete: {\n      // completes\n    },\n  },\n});\n\nconst Todos = () => {\n  const [machine, send] = useMachine(todoMachine);\n  const [todos, setTodos] = useState({\n    formulary: {\n      task: \"\",\n    },\n    list: [\n      { id: 1, value: \"task 1\", complete: false },\n      { id: 2, value: \"task 2\", complete: false },\n      { id: 3, value: \"task 3\", complete: false },\n      { id: 4, value: \"task 4\", complete: false },\n    ],\n  });\n\n  console.log(todos);\n\n  return (\n    <div>\n      <form\n        onSubmit={(e) => {\n          e.preventDefault();\n          const formlary = [\n            ...todos.list,\n            {\n              id: Math.floor(Math.random() * 1000 + 1),\n              value: e.target.value,\n              complete: false,\n            },\n          ];\n\n          console.log(formlary);\n          setTodos(formlary);\n        }}\n      >\n        <input\n          type=\"text\"\n          id=\"todo\"\n          name=\"todo\"\n          placeholder=\"Task here\"\n          value={todos.formulary.task}\n          onChange={(e) =>\n            setTodos({ ...todos.formulary.task, task: e.target.value })\n          }\n        ></input>\n        <button type=\"submit\">save</button>\n      </form>\n\n      {todos.list &&\n        todos.list.map((t) => (\n          <li key={t.id} style={t.styled}>\n            <input\n              type=\"checkbox\"\n              id={t.id}\n              name=\"register\"\n              value={t.value}\n              onChange={(e) => this.props.change(e)}\n              checked={t.complete}\n            />\n            {t.value}\n          </li>\n        ))}\n\n      <button type=\"button\" onClick={{}}>\n        All\n      </button>\n      <button type=\"button\" onClick={{}}>\n        Active\n      </button>\n      <button type=\"button\" onClick={{}}>\n        Complete\n      </button>\n    </div>\n  );\n};\n\nexport default Todos;\n"]},"metadata":{},"sourceType":"module"}
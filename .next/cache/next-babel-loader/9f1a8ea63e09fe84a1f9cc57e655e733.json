{"ast":null,"code":"var _jsxFileName = \"/Users/lucas/developments/reactjs/todomvccopy/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Form from \"../components/form\";\nimport Footer from \"../components/footer\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }\n    }, __jsx(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }\n    }), __jsx(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Home; // import React, { useState, useMemo, useEffect } from \"react\";\n// import { Machine, interpret, assign } from \"xstate\";\n// function useMachine(machine) {\n//   const [current, setCurrent] = useState(machine.initialState);\n//   const service = useMemo(\n//     () =>\n//       interpret(machine)\n//         .onTransition((state) => {\n//           if (state.changed) {\n//             setCurrent(state);\n//           }\n//         })\n//         .start(),\n//     []\n//   );\n//   useEffect(() => {\n//     return () => service.stop();\n//   }, []);\n//   return [current, service.send];\n// }\n// function fakePayment() {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => resolve(\"pagamento realizado\"), 2500);\n//   });\n// }\n// const stateMachine = Machine({\n//   initial: \"idle\",\n//   context: {\n//     msg: \"\",\n//   },\n//   states: {\n//     idle: {\n//       on: {\n//         SUBMIT: [\n//           {\n//             target: \"loading\",\n//             cond: (context, event) => {\n//               return event.data.name !== \"\" && event.data.card !== \"\";\n//             },\n//           },\n//           {\n//             target: \"error\",\n//           },\n//         ],\n//       },\n//     },\n//     loading: {\n//       invoke: {\n//         id: \"doPayment\",\n//         src: () => fakePayment(),\n//         onDone: {\n//           target: \"success\",\n//           action: assign({\n//             msg: (ctx, event) => {\n//               console.log(event);\n//               return event.data;\n//             },\n//           }),\n//         },\n//         onError: {\n//           target: \"error\",\n//           action: assign({\n//             msg: (ctx, event) => {\n//               console.log(event);\n//               return event.data;\n//             },\n//           }),\n//         },\n//       },\n//     },\n//     error: {\n//       on: {\n//         SUBMIT: [\n//           {\n//             target: \"loading\",\n//             cond: (context, event) => {\n//               return event.data.name !== \"\" && event.data.card !== \"\";\n//             },\n//           },\n//         ],\n//       },\n//     },\n//     success: {\n//       type: \"final\",\n//     },\n//   },\n// });\n// const App = () => {\n//   const [machine, send] = useMachine(stateMachine);\n//   const [form, updateForm] = useState({\n//     name: \"\",\n//     card: \"\",\n//   });\n//   console.log(machine.value);\n//   return (\n//     <div>\n//       <div>\n//         <h2>State Machine Payment</h2>\n//       </div>\n//       {machine.matches(\"error\") ? (\n//         <div>{machine.context.msg}</div>\n//       ) : (\n//         <div>{machine.context.msg}</div>\n//       )}\n//       <div>\n//         <form\n//           onSubmit={(e) => {\n//             e.preventDefault();\n//             send({ type: \"SUBMIT\", data: { ...form } });\n//           }}\n//         >\n//           <div>\n//             <label>name on card</label>\n//             <input\n//               type=\"text\"\n//               id=\"nameOnCard\"\n//               maxLength=\"255\"\n//               value={form.name}\n//               onChange={(e) => updateForm({ ...form, name: e.target.value })}\n//             />\n//           </div>\n//           <div>\n//             <label>card number</label>\n//             <input\n//               type=\"text\"\n//               id=\"creditCardNumber\"\n//               value={form.card}\n//               onChange={(e) => updateForm({ ...form, card: e.target.value })}\n//             />\n//           </div>\n//           <button type=\"submit\" id=\"payButton\">\n//             <span>pay now</span>\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n// export default App;","map":{"version":3,"sources":["/Users/lucas/developments/reactjs/todomvccopy/pages/index.js"],"names":["React","Component","Form","Footer","Home","constructor","props","state","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa,EAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF;AAMD;;AAb0B;;AAgB7B,eAAeJ,IAAfsourcesContent":["import React, { Component } from \"react\";\nimport Form from \"../components/form\";\nimport Footer from \"../components/footer\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div>\n        <Form />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Home;\n\n// import React, { useState, useMemo, useEffect } from \"react\";\n// import { Machine, interpret, assign } from \"xstate\";\n\n// function useMachine(machine) {\n//   const [current, setCurrent] = useState(machine.initialState);\n\n//   const service = useMemo(\n//     () =>\n//       interpret(machine)\n//         .onTransition((state) => {\n//           if (state.changed) {\n//             setCurrent(state);\n//           }\n//         })\n//         .start(),\n//     []\n//   );\n\n//   useEffect(() => {\n//     return () => service.stop();\n//   }, []);\n\n//   return [current, service.send];\n// }\n\n// function fakePayment() {\n//   return new Promise((resolve, reject) => {\n//     setTimeout(() => resolve(\"pagamento realizado\"), 2500);\n//   });\n// }\n\n// const stateMachine = Machine({\n//   initial: \"idle\",\n//   context: {\n//     msg: \"\",\n//   },\n//   states: {\n//     idle: {\n//       on: {\n//         SUBMIT: [\n//           {\n//             target: \"loading\",\n//             cond: (context, event) => {\n//               return event.data.name !== \"\" && event.data.card !== \"\";\n//             },\n//           },\n//           {\n//             target: \"error\",\n//           },\n//         ],\n//       },\n//     },\n//     loading: {\n//       invoke: {\n//         id: \"doPayment\",\n//         src: () => fakePayment(),\n//         onDone: {\n//           target: \"success\",\n//           action: assign({\n//             msg: (ctx, event) => {\n//               console.log(event);\n//               return event.data;\n//             },\n//           }),\n//         },\n//         onError: {\n//           target: \"error\",\n//           action: assign({\n//             msg: (ctx, event) => {\n//               console.log(event);\n//               return event.data;\n//             },\n//           }),\n//         },\n//       },\n//     },\n//     error: {\n//       on: {\n//         SUBMIT: [\n//           {\n//             target: \"loading\",\n//             cond: (context, event) => {\n//               return event.data.name !== \"\" && event.data.card !== \"\";\n//             },\n//           },\n//         ],\n//       },\n//     },\n//     success: {\n//       type: \"final\",\n//     },\n//   },\n// });\n\n// const App = () => {\n//   const [machine, send] = useMachine(stateMachine);\n//   const [form, updateForm] = useState({\n//     name: \"\",\n//     card: \"\",\n//   });\n\n//   console.log(machine.value);\n\n//   return (\n//     <div>\n//       <div>\n//         <h2>State Machine Payment</h2>\n//       </div>\n\n//       {machine.matches(\"error\") ? (\n//         <div>{machine.context.msg}</div>\n//       ) : (\n//         <div>{machine.context.msg}</div>\n//       )}\n\n//       <div>\n//         <form\n//           onSubmit={(e) => {\n//             e.preventDefault();\n//             send({ type: \"SUBMIT\", data: { ...form } });\n//           }}\n//         >\n//           <div>\n//             <label>name on card</label>\n//             <input\n//               type=\"text\"\n//               id=\"nameOnCard\"\n//               maxLength=\"255\"\n//               value={form.name}\n//               onChange={(e) => updateForm({ ...form, name: e.target.value })}\n//             />\n//           </div>\n//           <div>\n//             <label>card number</label>\n//             <input\n//               type=\"text\"\n//               id=\"creditCardNumber\"\n//               value={form.card}\n//               onChange={(e) => updateForm({ ...form, card: e.target.value })}\n//             />\n//           </div>\n//           <button type=\"submit\" id=\"payButton\">\n//             <span>pay now</span>\n//           </button>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default App;\n"]},"metadata":{},"sourceType":"module"}